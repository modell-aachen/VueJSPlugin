%META:TOPICINFO{author="BaseUserMapping_999" comment="" date="1443077395" format="1.1" version="1"}%
%META:TOPICPARENT{name="System.VueJSPlugin"}%

%VUE{VERSION="2"}%

%ADDTOZONE{"script" requires="VUEJSPLUGIN" text="<script class='script' type='text/javascript' src='%PUBURLPATH%/%SYSTEMWEB%/VueJSPlugin/showroom.js'></script>"}%

The VueJSPlugin comes with different component. See them all.

%TOC%

---+ Vue Sidebar
The following examples provide an overview of its functionality. The corresponding code examples can be found in [[%PUBURLPATH%/%SYSTEMWEB%/VueJSPlugin/sidebarDocs.js][sidebarDocs.js]]


<div class="flatskin-wrapped">
	<div id="sidebarBareExample"></div>

	<div id="sidebarLayoutExample"></div>

	<div id="sidebarTabExample"></div>

	<div id="sidebarTab2Example"></div>

	<div id="sidebarModalExample"></div>
</div>

---+ Vue Header

<div class="flatskin-wrapped">
 <div id="header-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"HeaderVueTemplate"}%
<div>
  <table>
    <tr>
      <th>
        plain header
      </th>
      <th>
        with ruler
      </th>
      <th>
        with sublabel
      </th>
      <th>
        with status
      </th>
    </tr>
    <tr>
      <td>
        <vue-header>Header 1</vue-header>
      </td>
      <td>
        <vue-header ruler>Header 1</vue-header>
      </td>
      <td>
        <vue-header sublabel="sublabel">Header 1</vue-header>
      </td>
      <td>
        <vue-header status="warning">Header 1</vue-header>
      </td>
    </tr>
    <tr>
      <td>
        <vue-header2>Header 2</vue-header2>
      </td>
      <td>
        <vue-header2 ruler>Header 2</vue-header2>
      </td>
      <td>
        <vue-header2 sublabel="sublabel">Header 2</vue-header2>
      </td>
      <td>
        <vue-header2 status="warning">Header 2</vue-header2>
      </td>
    </tr>
    <tr>
      <td>
        <vue-header3>Header 3</vue-header3>
      </td>
      <td>
        <vue-header3 ruler>Header 3</vue-header3>
      </td>
      <td>
        <vue-header3 sublabel="sublabel">Header 3</vue-header3>
      </td>
      <td>
        <vue-header3 status="warning">Header 3</vue-header3>
      </td>
    </tr>
  </table>
</div>
%ENDSECTION{"HeaderVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="header-template">
%INCLUDE{"%WEB%.%TOPIC%" section="HeaderVueTemplate"}%
</script>


---+ Vue Text Block

<div class="flatskin-wrapped">
 <div id="text-block-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"TextBlockVueTemplate"}%
<div>
    <vue-text-block>
        <vue-header2>Primary</vue-header2>
        <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>
        <p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</p>
    </vue-text-block>
    <vue-text-block is-full-width type='secondary'>
        <vue-header2>Secndary - full width</vue-header2>
        <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>
    </vue-text-block>
    <vue-text-block type='disabled'>
        <vue-header2>Disabled</vue-header2>
        <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>
    </vue-text-block>
    <vue-text-block type='akzent'>
       <vue-header2>Akzent</vue-header2>
        <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>
    </vue-text-block>
 </div>
%ENDSECTION{"TextBlockVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="text-block-template">
%INCLUDE{"%WEB%.%TOPIC%" section="TextBlockVueTemplate"}%
</script>
---+ Vue Button

<div class="flatskin-wrapped">
 <div id="button-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"ButtonVueTemplate"}%
<div>
   Button
      <vue-button title='Button' @click.native='atClick' /><br>
   Primary Button
      <vue-button type='primary' title='Button' /><br>
   Ghost Button
      <vue-button type='ghost' title='Button' /><br>
   Delete Button
      <vue-button type='delete' title='Button' /><br>
   Button with icon
      <vue-button type='primary' icon='far fa-paperclip' title='Button' /><br>
   Disabled Button
      <vue-button type='primary' is-disabled title='Button' /><br>
   Icon only Button
      <vue-button type='icon' icon='fas fa-exclamation-triangle' color="ma-warning-color" /><br>
    <div>
      Button alignment left<br/>
        <vue-button type='primary' title='Button' alignment='left' style="width: 45%" /><br>
    </div>
    <div>
      Button alignment center (default)<br/>
        <vue-button type='primary' title='Button'  style="width: 45%" /><br>
    </div>
    <div>
      Button alignment right<br/>
        <vue-button type='primary' title='Button' alignment='right' style="width: 45%" /><br>
    </div>
    <div>
      Button without margins<br/>
        ###############<br/>
        ###<vue-button type='primary' title='Button' no-margins />###<br/>
        ###############
    </div>
</div>
%ENDSECTION{"ButtonVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="button-template">
%INCLUDE{"%WEB%.%TOPIC%" section="ButtonVueTemplate"}%
</script>

---+ Vue Check Item

---++ Plain check items

<div class="flatskin-wrapped">
 <div id="check-item-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"CheckItemVueTemplate"}%
<div class="grid-x">
  <div class="cell large-4">
    <h3>CheckBox</h3>
    <vue-check-item name="zutaten[]" value="salz" v-model="values" checked>Salz</vue-check-item>
    <vue-check-item name="zutaten[]" value="zucker" v-model="values">Zucker</vue-check-item>
    <vue-check-item name="zutaten[]" value="pfeffer" v-model="values" >Pfeffer</vue-check-item><br>
    {{values}}<br>
  </div>
  <div class="cell large-4">
    <h3>Radio</h3>
    <vue-check-item name="method" type="radio" value="VISA" v-model="payment" checked>VISA</vue-check-item>
    <vue-check-item name="method" type="radio" value="PayPal" v-model="payment">PayPal</vue-check-item>
    <vue-check-item name="method" type="radio" value="Sofortueberweisung" v-model="payment" >Sofort Überweisung</vue-check-item><br>
    Zahlungsmethode: {{payment}}<br>
  </div>
  <div class="cell large-4">
    <h3>Switch</h3>
    <vue-check-item is-switch name="zutaten[]" value="salz" v-model="values" checked>Salz</vue-check-item>
    <vue-check-item is-switch name="zutaten[]" value="zucker" v-model="values">Zucker</vue-check-item>
    <vue-check-item is-switch name="zutaten[]" value="pfeffer" v-model="values" >Pfeffer</vue-check-item><br>
    {{values}}<br>
  </div>
</div>
%ENDSECTION{"CheckItemVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="check-item-template">
%INCLUDE{"%WEB%.%TOPIC%" section="CheckItemVueTemplate"}%
</script>

---++ With description and badges

<div class="flatskin-wrapped" style="max-width: 800px;">
 <div id="check-item-examples-2"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"CheckItemVueTemplate2"}%
<div class="grid-x grid-margin-x">
  <div class="cell large-4">
    <h3>CheckBox</h3>
    <vue-check-item name="zutaten[]" description="NaCl" badge="salty" value="salz" v-model="values" checked>Salz</vue-check-item>
    <vue-check-item name="zutaten[]" description badge="sweet"  value="zucker" v-model="values"><template slot="description"><span>C<sub>12</sub>H<sub>22</sub>O<sub>11</sub></span></template>Zucker</vue-check-item>
    <vue-check-item name="zutaten[]" description badge="hot"  value="pfeffer" v-model="values" >Pfeffer</vue-check-item><br>
    {{values}}<br>
  </div>
  <div class="cell large-4">
    <h3>Radio</h3>
    <vue-check-item name="method" description badge="card" type="radio" value="VISA" v-model="payment" checked><template slot="description"><a href="http://visa.de">visa.de</a></template>VISA</vue-check-item>
    <vue-check-item name="method" description="www.paypal.de" badge="online"  type="radio" value="PayPal" v-model="payment">PayPal</vue-check-item>
    <vue-check-item name="method" description badge="3rd party"  type="radio" value="Sofortueberweisung" v-model="payment" >Sofort Überweisung</vue-check-item><br>
    Zahlungsmethode: {{payment}}<br>
  </div>
  <div class="cell large-4">
    <h3>Radio without badges</h3>
    <vue-check-item name="method_no_badge" description type="radio" value="VISA" v-model="payment_no_badge" checked><template slot="description"><a href="http://visa.de">visa.de</a></template>VISA</vue-check-item>
    <vue-check-item name="method_no_badge" description="www.paypal.de" type="radio" value="PayPal" v-model="payment_no_badge">PayPal</vue-check-item>
    <vue-check-item name="method_no_badge" description type="radio" value="Sofortueberweisung" v-model="payment_no_badge" >Sofort Überweisung</vue-check-item><br>
    Zahlungsmethode: {{payment_no_badge}}<br>
  </div>
</div>
%ENDSECTION{"CheckItemVueTemplate2"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="check-item-template-2">
%INCLUDE{"%WEB%.%TOPIC%" section="CheckItemVueTemplate2"}%
</script>

---++ With description label or placeholder

<div class="flatskin-wrapped" style="max-width: 800px;">
 <div id="check-item-examples-3"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"CheckItemVueTemplate3"}%
<div class="grid-x grid-margin-x">
  <div class="cell large-4">
    <h3>With label</h3>
    <vue-check-item name="zutaten[]" label="salty" value="salz" v-model="values" checked>Salz</vue-check-item>
    <vue-check-item name="zutaten[]" label="sweet" value="zucker" v-model="values">Zucker</vue-check-item>
    <vue-check-item name="zutaten[]" label="hot"  value="pfeffer" v-model="values" >Pfeffer</vue-check-item>
    {{values}}<br>
  </div>
  <div class="cell large-4">
    <h3>With dummy</h3>
    <vue-check-item name="zutaten[]" label-dummy value="salz" v-model="values" checked>Salz</vue-check-item>
    <vue-check-item name="zutaten[]" label-dummy value="zucker" v-model="values">Zucker</vue-check-item>
    <vue-check-item name="zutaten[]" label-dummy value="pfeffer" v-model="values" >Pfeffer</vue-check-item>
    {{values}}<br>
  </div>
  <div class="cell large-4">
    <h3>without label or dummy</h3>
    <vue-check-item name="zutaten[]" value="salz" v-model="values" checked>Salz</vue-check-item>
    <vue-check-item name="zutaten[]" value="zucker" v-model="values">Zucker</vue-check-item>
    <vue-check-item name="zutaten[]" value="pfeffer" v-model="values" >Pfeffer</vue-check-item>
    {{values}}<br>
  </div>
</div>
%ENDSECTION{"CheckItemVueTemplate3"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="check-item-template-3">
%INCLUDE{"%WEB%.%TOPIC%" section="CheckItemVueTemplate3"}%
</script>

---+ Paged Selector

<div class="flatskin-wrapped" style="max-width: 500px;">
 <div id="paged-selector-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"PagedSelectorTemplateData"}%
[
    { "value":"01", "label":"January", "description":"Acacia" },
    { "value":"02", "label":"February", "description":"Acacia, Cedar, Juniper, Olive, Pine" },
    { "value":"03", "label":"March", "description":"Birch, Cedar, Juniper, Cottonwood, Elm, Maple, Mesquite, Oak, Olive, Pine" },
    { "value":"04", "label":"April", "description":"Acacia, Ash, Birch, Cedar, Juniper, Cottonwood, Elm, Maple, Mesquite, Oak, Olive, Pecan, Pine, Sycamore" },
    { "value":"05", "label":"May", "description":"Acacia, Ash, Cottonwood, Elm, Mesquite, Oak, Olive, Pecan, Sycamore, Walnut, Black" },
    { "value":"06", "label":"June", "description":"Walnut, Black" },
    { "value":"07", "label":"July", "description":"Cedar, Juniper, Walnut, Black" },
    { "value":"08", "label":"August", "description":"Cedar, Juniper, Elm" },
    { "value":"09", "label":"September", "description":"Bottlebrush, Cedar, Juniper, Elm" },
    { "value":"10", "label":"October"},
    { "value":"11", "label":"November"},
    { "value":"12", "label":"December"}
]
%ENDSECTION{"PagedSelectorTemplateData"}%
%STARTSECTION{"PagedSelectorTemplate"}%
<vue-paged-selector
    filterLabel="filter options"
    filterPlaceholder="type here to filter"
    :options="options"
></vue-paged-selector>
%ENDSECTION{"PagedSelectorTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="paged-selector-template">
%INCLUDE{"%WEB%.%TOPIC%" section="PagedSelectorTemplate"}%
</script>
<script type="application/json" id="paged-selector-json">
%INCLUDE{"%WEB%.%TOPIC%" section="PagedSelectorTemplateData"}%
</script>

---+ Vue Input Text

<div class="flatskin-wrapped">
 <div id="input-text-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"InputTextVueTemplate"}%
<div>
    <vue-input-text v-model="userInput" />
    <vue-input-text v-model="userInput" label="Einzeilige Überschrift" />
    <vue-input-text v-model="userInput" placeholder="Small" is-small />
    <vue-input-text v-model="userInput" placeholder="Disabled" is-disabled />
    <vue-input-text v-model="userInput" name="Email" validate="email" placeholder="Validate Email" />
    <vue-input-text v-model="userInput" name="Feld" validate="alpha_num" placeholder="Validate alphanumerisch" />
    <vue-input-text v-model="userInput" label="Search" icon="far fa-search" placeholder="Search" />
</div>
%ENDSECTION{"InputTextVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="input-text-template">
%INCLUDE{"%WEB%.%TOPIC%" section="InputTextVueTemplate"}%
</script>

---+ Vue Select

<div class="flatskin-wrapped">
 <div id="select-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"SelectVueTemplate"}%
<div class="grid-x grid-margin-x">
    <div class="cell large-3">
        <h3>Regular</h3>
        <vue-select
            v-model="singleSelectValue"
            label="single select"
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            v-model="singleSelectAllowClearValue"
            label="single select with allow clear"
            allowClear
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            v-model="multiSelectValue"
            multiple
            label="multi select"
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            label="Disabled Select"
            placeholder="Disabled .."
            :onSearch="() => {}"
            :isDisabled="true"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
    </div>
    <div class="cell large-3">
        <h3>Regular with pre-selection</h3>
        <vue-select
            v-model="singleSelectPreSelectValue"
            label="single select"
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            v-model="singleSelectAllowClearPreSelectValue"
            label="single select with allow clear"
            allowClear
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            v-model="multiSelectPreSelectValue"
            multiple
            label="multi select"
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            :value="disabledPreSelectValue"
            label="Disabled Select"
            placeholder="Disabled .."
            :onSearch="() => {}"
            :isDisabled="true"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
    </div>
    <div class="cell large-3">
        <h3>Small</h3>
        <vue-select
            v-model="singleSelectValue"
            isSmall
            label="single select"
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            v-model="singleSelectAllowClearValue"
            isSmall
            label="single select with allow clear"
            allowClear
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            v-model="multiSelectValue"
            isSmall
            multiple
            label="multi select"
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            isSmall
            label="Disabled Select"
            placeholder="Disabled .."
            :onSearch="() => {}"
            :isDisabled="true"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
    </div>
    <div class="cell large-3">
        <h3>Small with pre-selection</h3>
        <vue-select
            v-model="singleSelectPreSelectValue"
            isSmall
            label="single select"
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            v-model="singleSelectAllowClearPreSelectValue"
            isSmall
            label="single select with allow clear"
            allowClear
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            v-model="multiSelectPreSelectValue"
            isSmall
            multiple
            label="multi select"
            placeholder="Search term..."
            :initialOptions="jsOptions"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
        <vue-select
            :value="disabledPreSelectValue"
            isSmall
            label="Disabled Select"
            placeholder="Disabled .."
            :onSearch="() => {}"
            :isDisabled="true"
        >
            <template slot="more-results">Show more results</template>
        </vue-select>
    </div>
</div>
%ENDSECTION{"SelectVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="select-template">
%INCLUDE{"%WEB%.%TOPIC%" section="SelectVueTemplate"}%
</script>

---+ Mixed input field
Mixed input fields are used to input a mixture of text and options.
<div class="flatskin-wrapped">
  <div id="mixed-input-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"MixedInputTemplate"}%
<vue-mixed-input label="Set your message" v-model="value" :options="options"/>
%ENDSECTION{"MixedInputTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="mixed-input-template">
%INCLUDE{"%WEB%.%TOPIC%" section="MixedInputTemplate"}%
</script>

---+ Vue Tabpane
<div class="flatskin-wrapped">
 <div id="tabpane-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"TabpaneVueTemplate"}%
<div>
   <vue-tabpane>
      <vue-tab name="Datein und Ansichten">
         <vue-tabpane type="Sub">
            <vue-tab name="Basis">
            </vue-tab>
            <vue-tab name="Reiter">
            </vue-tab>
            <vue-tab name="Tabelle">
            </vue-tab>
         </vue-tabpane>
      </vue-tab>
      <vue-tab name="Workflow">
         <span>Here is some content for the second tab</span>
      </vue-tab>
      <vue-tab name="Übersicht" id="someId">
      </vue-tab>
      <vue-tab name="Übersetzungen">
      </vue-tab>
   </vue-tabpane>
</div>
%ENDSECTION{"TabpaneVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="tabpane-template">
%INCLUDE{"%WEB%.%TOPIC%" section="TabpaneVueTemplate"}%
</script>

---+ Vue Pagination
<div class="flatskin-wrapped">
 <div id="pagination-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"PaginationVueTemplate"}%
<div>
   <vue-pagination
     v-model="page"
     :pageCount="pageCount" />
   <vue-pagination
     v-model="page"
     :pageCount="pageCount"
     :pageLimit="15" />
</div>
%ENDSECTION{"PaginationVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="pagination-template">
%INCLUDE{"%WEB%.%TOPIC%" section="PaginationVueTemplate"}%
</script>

---+ Vue Dad (Drag & Drop) List
We use <a href="https://vuejs.org/v2/guide/components.html#Scoped-Slots">Scoped Slots</a> to pass a template to our List.
<div class="flatskin-wrapped">
 <div id="dad-list-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"DadListVueTemplate"}%
<div>
   <vue-dad-list v-model="list" @add-item="addMetadataBlock" :allowed-types="['metadataBlock']" item-type="vue-collapsible-dad-item">
     <vue-collapsible-dad-item slot-scope="props"
       :item="props.item"
       :index="props.index"
       :can-drop-in-title="true"
       @dropped-item="addItemFromDummyList"
       :allowed-types="['status']"
       :last-opend-item-id="props.lastOpendItemId"
       :remove-options="{name: 'Löschen', onRemove: onRemoveItem}"
       >
       <div class="grid-x grid-margin-x">
         <div class="cell large-6">
           <vue-input-text v-model="props.item.label" label="Name des Staus"></vue-input-text>
           <vue-input-text v-model="props.item.label" label="Nur bearebeitbar durch folgende Person"></vue-input-text>
         </div>
         <div class="cell large-6 align-self-bottom">
           <vue-input-text v-model="props.item.label" label="Nur kommentierbar durch folgende Personen und Gruppen" data="userInput"></vue-input-text>
         </div>
       </div>
       <hr>
       <div class="grid-x grid-margin-x">
          <div class="cell large-6">
             <h3>Einsprünge</h3>
               <vue-dad-list v-if="props.item.fields"
                 :allowed-types="['status']"
                 v-model="props.item.fields[0]"
                 @add-item="addStatusField"
                 item-type="vue-simple-dad-item">
                   <vue-simple-dad-item slot-scope="props"
                     :item="props.item"
                     :index="props.index">
                   </vue-simple-dad-item>
                   <vue-button slot="addArea" slot-scope="props"
                     title="Add"
                     icon="fas fa-plus"
                     @click.native="props.add">
                   </vue-button>
               </vue-dad-list>
          </div>
          <div class="cell large-6">
             <h3>Ausgänge</h3>
               <vue-dad-list v-if="props.item.fields"
                 :allowed-types="['status']"
                 v-model="props.item.fields[1]"
                 @add-item="addStatusField"
                 item-type="vue-simple-dad-item">
                   <vue-simple-dad-item slot-scope="props"
                     :item="props.item"
                     :index="props.index">
                   </vue-simple-dad-item>
                   <p slot="addArea"></p>
               </vue-dad-list>
          </div>
       </div>
     </vue-collapsible-dad-item>
   </vue-dad-list>
</div>
%ENDSECTION{"DadListVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="dad-list-template">
%INCLUDE{"%WEB%.%TOPIC%" section="DadListVueTemplate"}%
</script>
---+ Vue Splitbutton

<div class="flatskin-wrapped">
 <div id="splitbutton-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"SplitbuttonVueTemplate"}%
<splitbutton main-button-title="Do the main thing" dropdown-button-title="more" :on-main-button-click="boom">
  <template slot="dropdown-content">
    <li @click="boom"><a>Do another thing</a></li>
    <li @click="boom"><a>Do yet another thing</a></li>
  </template>
</splitbutton>
%ENDSECTION{"SplitbuttonVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="splitbutton-template">
%INCLUDE{"%WEB%.%TOPIC%" section="SplitbuttonVueTemplate"}%
</script>

---+ Alerts
Alerts can be triggered by calling the $showAlert function. See the [[%PUBURLPATH%/%SYSTEMWEB%/VueJSPlugin/showroom.js][showroom.js]] for configuration examples.
<div class="flatskin-wrapped">
  <div id="alert-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"AlertTemplate"}%
<vue-button title="Warning" @click.native="alert"/>
%ENDSECTION{"AlertTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="alert-template">
%INCLUDE{"%WEB%.%TOPIC%" section="AlertTemplate"}%
</script>

---+ Tooltips
<div class="flatskin-wrapped">
  <div id="tooltip-examples"></div>
</div>
%VUETOOLTIP{text="I am a Macro!"}%
%TWISTY%
<verbatim>
%STARTSECTION{"TooltipTemplate"}%
<div>
  <vue-explanation-tooltip text="Hier wird die Batch-Nummer der Produktion eingetragen"/>
  <vue-information-tooltip text="Wer darf diese Seite sehen?">
    Gombert<br>
    KeyUserGroup
  </vue-information-tooltip>
</div>
%ENDSECTION{"TooltipTemplate"}%

%VUETOOLTIP{text="I am a Macro!"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="tooltip-template">
%INCLUDE{"%WEB%.%TOPIC%" section="TooltipTemplate"}%
</script>


---+ Table
<div class="flatskin-wrapped">
 <div id="table-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"TableVueTemplate"}%
<vue-table
  :columns="columns"
  :data="tableDataForCurrentPage"
  :page-count="pageCount"
  :current-page="currentPage"
  :sorted-column-index="sortedColumnIndex"
  :sort-order="sortOrder"
  @sort-changed="onSortChanged"
  @page-changed="onPageChanged"
  >
  <template slot="column0" slot-scope="{item}">{{ item.first_name }}</template>
  <template slot="column1" slot-scope="{item}">{{ item.last_name }}</template>
  <template slot="column2" slot-scope="{item}">{{ item.email }}</template>
  <template slot="column3" slot-scope="{item}">{{ item.gender }}</template>
</vue-table>
%ENDSECTION{"TableVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="table-template">
%INCLUDE{"%WEB%.%TOPIC%" section="TableVueTemplate"}%
</script>

---+ HistoryList
<div class="flatskin-wrapped">
 <div id="history-list-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"HistoryListVueTemplate"}%
<vue-history-list
    :is-loading="false"
    :data="[
        {
           date: '14.10.2018, 08:30',
           action: 'Approved',
           actor: 'User 2',
           description: 'hat das Dokument Freigegeben',
           comment: 'Das sollten wir so leben!',
           icon: 'fa-check-circle ma-success-color',
        },
        {
           date: '13.10.2018, 16:30',
           action: 'Added to Approve',
           actor: 'User 1',
           description: 'hat um Freigabe gebeten',
           comment: '',
           icon: 'fa-question-circle ma-warning-color',
        },
        {
           date: '13.10.2018, 12:30',
           action: 'Edited',
           actor: 'User 2',
           description: 'hat das Dokument bearbeitet',
           comment: '',
           icon: 'fa-circle',
        },
        {
           date: '12.10.2018, 12:30',
           action: '',
           actor: 'User 2',
           description: 'hat das Element angelegt',
           comment: '',
           icon: 'fa-plus-circle ma-success-color',
        },
    ]">
</vue-history-list>
%ENDSECTION{"HistoryListVueTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="history-list-template">
%INCLUDE{"%WEB%.%TOPIC%" section="HistoryListVueTemplate"}%
</script>

---+ Loader / Spinner
<div class="flatskin-wrapped">
  <div id="loader-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"LoaderTemplate"}%
<div>
  <vue-button title="show fullscreen Loader for 3s" @click.native="toggleLoaderState"/>
  <vue-spinner />
</div>
%ENDSECTION{"LoaderTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="loader-template">
%INCLUDE{"%WEB%.%TOPIC%" section="LoaderTemplate"}%
</script>

---+ Search Grid
<div class="flatskin-wrapped">
 <div id="search-grid-examples"></div>
</div>
%TWISTY%
<verbatim>
%STARTSECTION{"SearchGridTemplate"}%
<search-grid
  :preferences="gridPreferences"/>
%ENDSECTION{"SearchGridTemplate"}%
</verbatim>
%ENDTWISTY%
<script type="text/x-template" id="search-grid-template">
%INCLUDE{"%WEB%.%TOPIC%" section="SearchGridTemplate"}%
</script>