// disable scrolling while offcanvas areas are active
.ocvs-leftbar, .ocvs-rightbar, .ocvs-search {
  overflow-y: hidden !important;
}

// any element tag by this class will follow a canvas animation
.follows-canvas {
  transition: transform 0.3s ease-in-out;
}


// reset canvas
:not(.ocvs-leftbar) .follows-canvas {
  transform: translate3d( 0, 0, 0 );
}

// hide scoll bar(s)
body {
  overflow-x: hidden !important;
}

// left canvas animation (user menu)
.ocvs-leftbar .follows-canvas {
  transform: translate3d( $qw-leftbar-width, 0, 0 );
  @media #{$large-up} {
    transform: translate3d( 100px, 0, 0 );
  }
}

// right canvas animation (search, attachments, history, etc)
.ocvs-rightbar .follows-canvas,
.ocvs-search .follows-canvas {
  @media #{$small-only} {
    transform: translate3d( -100%, 0, 0 );
  }

  @media #{$large-up} {
    $width: percentage( 1 / $total-columns );
    transform: translate3d( -1 * $width, 0, 0 );
  }
}

.ocvs-rightbar #ckarea.follows-canvas {
  @media #{$large-up} {
    $width: percentage( 1 / $total-columns );
    transform: translate3d( -1.5 * $width, 0, 0 );
  }
}

// left off canvas area (user menu)
.qw-offcanvas-leftbar {
  position: fixed;
  transform: translate3d( -1 * $qw-leftbar-width, 0, 0 );
  top: $qw-top-one-height;
  bottom: 0;
  width: $qw-leftbar-width;
  overflow-y: auto;
  z-index: 100;
  background: $body-bg;
  border-right: $qw-leftbar-border-width solid $qw-leftbar-border-color;
  transition: transform 0.3s ease-in-out;
  @media #{$large-up} {
    transition: transform 0.15s ease-in-out;
  }

  &.active {
    transform: translate3d( 0, 0, 0 );
  }
}

// animate search icon
// reason see below
.qw-search {
  transition: margin-left 0.3s ease-in-out;
  @media #{$large-up} { transition: margin-left 0.15s ease-in-out; }
}

// shrink breadcrumbs and extend search input according to viewport size
.ocvs-search {
  $p: percentage( 1 / $total-columns);
  .qw-breadcrumbs {
    @media #{$small-only} {
      display: none !important;
    }

    @media #{$large-up} {
      @include grid-column( $columns: 7 );
    }
  }

  .qw-menu {
    @media #{$small-only} {
      display: none !important;
    }
  }

  .qw-search {
    background: $qw-search-bg;

    @media #{$small-only} {
      @include grid-column( $columns: 11, $offset: 1 );
      padding-left: 0;
      border-bottom: $qw-search-border-width solid $qw-search-border-color;
    }

    @media #{$large-up} {
      @include grid-column( $columns: 4 );
      padding-left: 0;
    }

    > .close {
      display: block;
      background: inherit;
      border-top-left-radius: 5px;
      border-bottom-left-radius: 5px;
    }

    .qw-search-form {
      @media #{$small-only} {
        display: inline-block;
        max-height: $qw-top-one-height !important;
        width: 100%;
      }

      input {
        background: $qw-top-one-bg;
      }
    }

    .qw-search-icon {
      @media #{$small-only} {
        display: none;
      }
    }
  }
}

// left offcanvas (menu) activated
.ocvs-leftbar {
  $width: rem-calc($qw-leftbar-width) - $column-gutter/2;
  .qw-menu {
    width: $width;
    background: red;
  }

  // due to the fact the .qw-menu changes its width, we need to substract
  // the difference here. otherwise the search area will disappear.
  .qw-search {
    $p: percentage( 1 / $total-columns);
    @media #{$medium-up} {
      margin-left: calc( #{-1 * $width} + #{$p} );
    }

    @media #{$small-only} {
      @include grid-column( $columns: 1, $offset: 0, $last-column: true );
      float: right;
    }
  }

  // show close button and menu text
  .qw-menu-close { opacity: 1 !important; }
  .qw-menu-text {
    opacity: 1 !important;
    display: inline-block !important;
  }
}

// right off canvas area (search)
// large screens (and up): move the main canvas 1 column left
// medium: regular slider
// small: full width transition
.qw-offcanvas-search {
  $width: percentage( 1 / $total-columns );
  @media #{$small-only} {
    right: -1 * 100%;
    width: 100%;
  }

  @media #{$medium-up} {
    right: -4 * $width;
    width: 4 * $width;
  }

  position: fixed;
  top: $qw-top-one-height;
  bottom: 0;
  overflow-y: auto;
  z-index: 100;
  // background: $qw-content-bg;
  background: $qw-searchbar-bg !important;
  border-left: $qw-searchbar-border-width solid $qw-searchbar-border-color;

  transition-property: right, background;
  transition-timing-function: ease-in-out;
  transition-duration: 0.3s;
  @media #{$large-up} {
    transition-duration: 0.15s;
  }

  &.active {
    right: 0;
    background: $qw-searchbar-active-bg;
  }
}

.qw-offcanvas-rightbar {
  $width: percentage( 1 / $total-columns );
  @media #{$small-only} {
    right: -1 * 100%;
    width: 100%;
  }

  @media #{$medium-up} {
    right: -4 * $width;
    width: 4 * $width;
  }

  position: fixed;
  top: $qw-top-one-height;
  bottom: 0;
  overflow-y: auto;
  z-index: 100;
  background: $qw-rightbar-bg;
  border-left: $qw-rightbar-border-width solid $qw-rightbar-border-color;

  transition-property: right, background;
  transition-timing-function: ease-in-out;
  transition-duration: 0.3s;
  @media #{$large-up} {
    transition-duration: 0.15s;
  }

  &.active {
    right: 0;
    background: $qw-rightbar-active-bg;
  }
}
